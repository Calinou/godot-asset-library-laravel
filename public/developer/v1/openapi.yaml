openapi: "3.0.2"

info:
  title: Godot Asset Library
  description: Godot Engine's asset library
  version: "1.0.0"

servers:
  - url: "https://godotengine.org/asset-library/api/v1"

tags:
  - name: assets
    description: Assets

  - name: configure
    description: Configuration

paths:
  /asset:
    get:
      tags: [assets]
      summary: List assets
      description: Return a paginated list of assets.

      responses:
        200:
          description: Successful operation
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PaginatedAssetList"

  /asset/{id}:
    get:
      tags: [assets]
      summary: Get information about an asset
      description: Get information about a single asset.

      parameters:
        - name: id
          in: path
          required: true
          description: The asset's unique identifier.
          schema:
            type: integer

      responses:
        200:
          description: Successful operation
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/AssetDetails"

        422:
          description: Invalid request body
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ValidationError"

  /configure:
    get:
      tags: [configure]
      summary: Fetch categories
      description: Returns category names and IDs (used for editor integration).

      responses:
        200:
          description: Successful operation
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Category"

        422:
          description: Invalid request body
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ValidationError"

components:
  schemas:
    AssetSummary:
      type: object
      description: |
        A resource provided by the asset library (add-on, project, ...).
        These properties are returned both when requesting a list of assets or a specific asset.
      properties:
        asset_id:
          type: integer
          description: The asset's unique identifier.
        author:
          type: string
          description: The author's username.
        author_id:
          type: integer
          description: The author's unique identifier.
        category:
          type: string
          description: The category the asset belongs to.
        category_id:
          type: integer
          description: The unique identifier of the category the asset belongs to.
        cost:
          type: string
          description: |
            The asset's license as a [SPDX license identifier](https://spdx.org/licenses/).
            For compatibility reasons, this field is called `cost` instead of `license`.
        godot_version:
          type: string
          description: The Godot version the asset is intended for (in `major.minor` format).
        icon_url:
          type: string
          format: url
          description: The asset's icon URL (should always be a PNG image).
        modify_date:
          type: string
          format: date-time
          description: |
            The date on which the asset entry was last updated.
            Note that entries can be edited independently of new asset versions being released.
        rating:
          type: integer
          description: The asset's rating (unused). For compatibility reasons, a value of 0 is always returned.
          default: 0
        support_level:
          type: string
          enum: [official, community, testing]
          description: The asset's support level.
        title:
          type: string
          description: The asset's title (usually less than 50 characters).
        version:
          type: integer
          description: |
            The asset revision number (starting from 1).
            Every time the asset is edited (for anyone and for any reason), this number is incremented by 1.
        version_string:
          type: string
          description: The asset's version string (free-form, but usually `major.minor` or `major.minor.patch`).

    PaginatedAssetList:
      description: A paginated list of assets.
      allOf:
        - $ref: "#/components/schemas/PaginationResult"
        - type: object
          properties:
            result:
              type: array
              items: { $ref: "#/components/schemas/AssetSummary" }

    AssetDetails:
      description: |
        A resource provided by the asset library (add-on, project, ...).
        These properties are only returned when requesting a specific asset, not a list of assets.
      allOf:
        - $ref: "#/components/schemas/AssetSummary"
        - type: object
          properties:
            browse_url:
              type: string
              format: url
              description: The asset's browsable repository URL.
            description:
              type: string
              description: The asset's full description.
            download_url:
              type: string
              format: url
              description: The asset's download link (should always point to a ZIP archive).

    Category:
      type: object
      description: A category in which assets belong to. An asset can only belong to one category at a time.
      properties:
        id:
          type: integer
          description: The category's unique identifier.
        name:
          type: string
          description: The category's name.
        type:
          type: integer
          description: The category's type (0 = Add-ons, 1 = Projects).

    PaginationResult:
      type: object
      description: Properties which describe the results of the pagination requested.
      properties:
        page:
          type: integer
          description: The requested page number.
        page_length:
          type: integer
          description: The requested page length. **Note:** This can be higher than the total amount of items returned.
        pages:
          type: integer
          description: The total number of pages available. **Note:** If requesting a page higher than this value, a successful response will be returned (status code 200) but no items will be listed.
        total_items:
          type: integer
          description: The total number of items available.

    ValidationError:
      type: object
      description: An error returned by Laravel.
      properties:
        errors:
          type: object
          properties:
            "{field}":
              type: array
              description: Messages describing why the validation of the field failed.
        message:
          type: string
          description: A generic error message.
